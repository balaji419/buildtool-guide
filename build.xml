<project xmlns:ivy="antlib:org.apache.ivy.ant" name="buildtoolProject" default="main" basedir=".">
    <description>
        Simple example of build tools for java packages.
    </description>

    <property name="projectName" value="buildtool-guide" />
    <property name="src.dir" location="src/main/java" />
    <property name="build.dir" location="bin" />
    <property name="dist.dir" location="dist" />
    <property name="dist.lib.dir" location="dist/lib" />
    <property name="lib.dir" value="lib" />
    <property name="main-class" value="org.ea.LiftGuide" />

    <!-- ivy start -->
    <!-- ivy to get dependencies and copy to project lib folder automatically -->
    <target name="resolve" description="retrieve dependencies with ivy">
        <ivy:retrieve />
    </target>

    <!-- install ivy -->
    <target name="ivy" description="Install ivy">
        <mkdir dir="${user.home}/.ant/lib" />
        <get dest="${user.home}/.ant/lib/ivy.jar"
             src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.5.0-rc1/ivy-2.5.0-rc1.jar" />
    </target>
    <!-- ivy end -->

    <!-- get libraries -->
    <target name="download-libraries" description="Install ivy">
        <mkdir dir="${lib.dir}" />
        <get dest="${lib.dir}/commons-logging-1.2.jar"
             src="http://search.maven.org/remotecontent?filepath=commons-logging/commons-logging/1.2/commons-logging-1.2.jar" />
        <get dest="${lib.dir}/fontbox-2.0.19.jar"
             src="http://search.maven.org/remotecontent?filepath=org/apache/pdfbox/fontbox/2.0.19/fontbox-2.0.19.jar" />
        <get dest="${lib.dir}/pdfbox-2.0.19.jar"
             src="http://search.maven.org/remotecontent?filepath=org/apache/pdfbox/pdfbox/2.0.19/pdfbox-2.0.19.jar" />
    </target>
    <!-- libraries end -->

    <target name="init">
        <mkdir dir="${build.dir}" />
    </target>

    <path id="classpath">
        <fileset dir="${basedir}/">
            <include name="${lib.dir}/*.jar" />
        </fileset>
    </path>

    <!-- Need classpath to run this -->
    <target name="compile" depends="init" description="compile the source ">
        <javac includeantruntime="false" srcdir="${src.dir}"
               destdir="${build.dir}" classpathref="classpath" />
    </target>

    <!-- Group all dependencies into a big dependency-all.jar -->
    <target name="copy-dependencies">

        <mkdir dir="${dist.lib.dir}" />

        <jar jarfile="${dist.lib.dir}/dependencies-all.jar">
            <zipgroupfileset dir="${lib.dir}">
                <include name="**/*.jar" />
            </zipgroupfileset>
        </jar>

    </target>

    <!-- jar it, extract above dependency-all.jar and zip it with project files -->
    <target name="jar" depends="compile, copy-dependencies"
            description="package, output to JAR">

        <mkdir dir="${dist.dir}" />
        <mkdir dir="${dist.lib.dir}" />

        <jar jarfile="${dist.dir}/${projectName}.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}" />
            </manifest>
            <zipfileset src="${dist.lib.dir}/dependencies-all.jar"
                        excludes="META-INF/*.SF" />
        </jar>

    </target>

    <target name="clean" description="clean up">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
    </target>

    <!-- Default, run this -->
    <target name="main" depends="clean, compile, jar" />

</project>
